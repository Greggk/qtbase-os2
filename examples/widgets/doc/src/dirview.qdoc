/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example itemviews/dirview
    \title Dir View Example
    \ingroup examples-itemviews
    \brief This example demonstrates the usage of a tree view.

    The Dir View example shows a tree view of the local file
    system. It uses the QFileSystemModel class to provide file
    and directory information.

    \borderedimage dirview-example.png

    The example supports a number of command line options.
    These options include:
    \list
        \li Application description
        \li -help option
        \li -version option
        \li if the optionc {-c} is specified, the application will not
            use custom directory options
    \endlist

    \quotefromfile itemviews/dirview/main.cpp
    \skipto QCommandLineParser parser
    \printuntil parser.positionalArguments

    Declares a QFileSystemModel as data model for viewing
    the local file system. QFileSystem works with a cache, that is,
    it is updated continually with QFileSystemWatcher on that folder.

    \skipto QFileSystemModel
    \printuntil tree.setModel

    Creates a model/view implementation called \c tree
    for viewing the filesystem.

    \skipto tree.setAnimated(false)
    \printuntil tree.setWindowTitle

    Sets some formatting options for \c tree.
*/
